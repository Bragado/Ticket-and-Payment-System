DROP TABLE IF EXISTS CREDITCARD CASCADE;
DROP TABLE IF EXISTS COSTUMER CASCADE;
DROP TABLE IF EXISTS EVENT CASCADE;
DROP TABLE IF EXISTS CAFETARIAORDER CASCADE;
DROP TABLE IF EXISTS PRODUCT CASCADE;
DROP TABLE IF EXISTS CAFETERIAORDERNPRODUCTS CASCADE;
DROP TABLE IF EXISTS VOUCHER CASCADE;
DROP TABLE IF EXISTS CAFETARIAORDERNVOUCHER CASCADE;
DROP TABLE IF EXISTS VOUCHERMANAGER CASCADE;
DROP TABLE IF EXISTS TICKET CASCADE;

CREATE TABLE CREDITCARD(
	ID SERIAL PRIMARY KEY,
	TYPE INT NOT NULL,
	NUMBER TEXT NOT NULL,
	VALIDITY DATE NOT NULL
);


CREATE TABLE COSTUMER (
	ID TEXT PRIMARY KEY,
	NAME TEXT NOT NULL,
	USERNAME TEXT NOT NULL,
	PASSWORD TEXT NOT NULL,
	PUBLICKEY TEXT NOT NULL,
	NIF INT NOT NULL,
	CREDITCARD INT REFERENCES CREDITCARD(ID)
);


CREATE TABLE EVENT (
	ID SERIAL PRIMARY KEY,
	PHOTONAME TEXT NOT NULL,
	TITLE TEXT NOT NULL,
	DESCRIPTION TEXT NOT NULL,
	DATE DATE NOT NULL,
	CAPACITY INT NOT NULL,
	TICKETPRICE INT NOT NULL
);

CREATE TABLE CAFETARIAORDER (
	ID SERIAL PRIMARY KEY,
	PRICE REAL NOT NULL,
	DATE DATE NOT NULL,
	COSTUMERID TEXT REFERENCES COSTUMER(ID)
);

CREATE TABLE PRODUCT(
	ID SERIAL PRIMARY KEY,
	NAME TEXT NOT NULL,
	PRICE REAL NOT NULL
);

INSERT INTO PRODUCT (NAME, PRICE) VALUES ('Coffe', 0.6);
INSERT INTO PRODUCT (NAME, PRICE) VALUES ('Soda Drink' , 1.2);
INSERT INTO PRODUCT (NAME, PRICE) VALUES ('Popcorn' , 2.5);
INSERT INTO PRODUCT (NAME, PRICE) VALUES ('Sandwich' , 3.0);


CREATE TABLE CAFETERIAORDERNPRODUCTS(
	IDPRODUCT INT REFERENCES PRODUCT(ID),
	IDCAFETERIAORDER INT REFERENCES CAFETARIAORDER(ID),
	QUANTITY INTEGER NOT NULL, 
	PRIMARY KEY (IDPRODUCT, IDCAFETERIAORDER)
);

CREATE TABLE VOUCHER(
	ID TEXT PRIMARY KEY,
	TYPE INT NOT NULL,
	COSTUMERID TEXT REFERENCES COSTUMER(ID),
	USED INT DEFAULT 0
);

CREATE TABLE CAFETARIAORDERNVOUCHER(
	IDCAFETARIAORDER INT REFERENCES CAFETARIAORDER(ID),
	IDVOUCHER TEXT REFERENCES VOUCHER(ID)
);

CREATE TABLE VOUCHERMANAGER(
	COSTUMERID TEXT REFERENCES COSTUMER(ID) UNIQUE,
	AMOUNTPENDING REAL NOT NULL,
	PRIMARY KEY (COSTUMERID)
);

CREATE TABLE TICKET (
	TICKETID TEXT PRIMARY KEY,
	EVENTID INT REFERENCES EVENT(ID),
	OWNERID TEXT REFERENCES COSTUMER(ID),
	USED INT DEFAULT 0,
	PLACE TEXT NOT NULL		
);






